name: Build and Release

on:
  push:
    tags:
      - 'v*'
  workflow_dispatch:
    inputs:
      tag:
        description: 'Release tag (e.g., v1.0.0)'
        required: true
        type: string

env:
  GO_VERSION: '1.21'

jobs:
  build:
    name: Build Go Binaries
    runs-on: ubuntu-latest
    strategy:
      matrix:
        include:
          # Linux
          - goos: linux
            goarch: amd64
            output: b1cron-linux-amd64
          - goos: linux
            goarch: arm64
            output: b1cron-linux-arm64
          - goos: linux
            goarch: 386
            output: b1cron-linux-386
          - goos: linux
            goarch: arm
            goarm: 7
            output: b1cron-linux-armv7
          # Windows
          - goos: windows
            goarch: amd64
            output: b1cron-windows-amd64.exe
          - goos: windows
            goarch: 386
            output: b1cron-windows-386.exe
          - goos: windows
            goarch: arm64
            output: b1cron-windows-arm64.exe
          # macOS
          - goos: darwin
            goarch: amd64
            output: b1cron-darwin-amd64
          - goos: darwin
            goarch: arm64
            output: b1cron-darwin-arm64

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Go
      uses: actions/setup-go@v4
      with:
        go-version: ${{ env.GO_VERSION }}

    - name: Cache Go modules
      uses: actions/cache@v4
      with:
        path: ~/go/pkg/mod
        key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
        restore-keys: |
          ${{ runner.os }}-go-

    - name: Download dependencies
      run: go mod download

    - name: Build binary
      env:
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
        GOARM: ${{ matrix.goarm }}
        CGO_ENABLED: 0
      run: |
        go build -a -installsuffix cgo -ldflags="-w -s -X main.version=${{ github.ref_name }}" -o ${{ matrix.output }} cmd/app/main.go

    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: ${{ matrix.output }}
        path: ${{ matrix.output }}

  release:
    name: Create Release
    needs: build
    runs-on: ubuntu-latest
    permissions:
      contents: write

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Download all artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./artifacts

    - name: Prepare release assets
      run: |
        mkdir -p release
        find ./artifacts -type f -executable -o -name "*.exe" | while read file; do
          cp "$file" release/
        done
        ls -la release/

    - name: Create checksums
      run: |
        cd release
        sha256sum * > checksums.txt
        cat checksums.txt

    - name: Create Release
      uses: softprops/action-gh-release@v1
      with:
        tag_name: ${{ github.ref_name || inputs.tag }}
        name: Release ${{ github.ref_name || inputs.tag }}
        body: |
          ## B1Cron Release ${{ github.ref_name || inputs.tag }}
          
          ### 📦 二进制文件下载
          
          选择适合您系统的版本：
          
          **Linux:**
          - `b1cron-linux-amd64` - Linux x86_64
          - `b1cron-linux-arm64` - Linux ARM64 
          - `b1cron-linux-386` - Linux x86 (32位)
          - `b1cron-linux-armv7` - Linux ARM v7
          
          **Windows:**
          - `b1cron-windows-amd64.exe` - Windows x86_64
          - `b1cron-windows-386.exe` - Windows x86 (32位)
          - `b1cron-windows-arm64.exe` - Windows ARM64
          
          **macOS:**
          - `b1cron-darwin-amd64` - macOS Intel
          - `b1cron-darwin-arm64` - macOS Apple Silicon (M1/M2)
          
          ### 🚀 使用方法
          
          1. 下载适合您系统的二进制文件
          2. 添加执行权限（Linux/macOS）：`chmod +x b1cron-*`
          3. 运行：`./b1cron-* -config config.yaml`
          
          ### 📋 文件校验
          
          请使用 `checksums.txt` 验证下载文件的完整性。
          
        files: |
          release/*
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}